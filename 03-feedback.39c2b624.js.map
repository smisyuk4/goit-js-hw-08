{"mappings":"qhBAsBA,MAAMA,EAASC,EAFfC,EAAA,UAGMC,EAAa,GACnB,IAAIC,EAAUC,aAAaC,QAAQ,uBAEnC,MAAMC,EAAO,CACTC,KAAMC,SAASC,cAAc,kBAC7BC,MAAOF,SAASC,cAAc,SAC9BE,QAASH,SAASC,cAAc,aAGpC,GAAIN,EAAS,EAMb,SAAyBS,GACrB,MAAMF,MACFA,EAAKC,QACLA,GACAC,EAEJN,EAAKI,MAAMG,MAAQH,EACnBJ,EAAKK,QAAQE,MAAQF,EAErBT,EAAWQ,MAAQA,EACnBR,EAAWS,QAAUA,C,CAbrBG,CAFwBC,KAAKC,MAAMb,G,CA0CvCG,EAAKC,KAAKU,iBAAiB,QAASlB,EAAOmB,UAxBrBC,IAClB,MAAMC,EAAUD,EAAME,OAAOC,aAAa,QAE1B,UAAZF,IACAlB,EAAWQ,MAAQS,EAAME,OAAOR,OAGpB,YAAZO,IACAlB,EAAWS,QAAUQ,EAAME,OAAOR,OAGtCV,EAAUY,KAAKQ,UAAUrB,GACzBE,aAAaoB,QAAQ,sBAAuBrB,EAAQ,GAYU,MAElEG,EAAKC,KAAKU,iBAAiB,UAXJE,IACnBA,EAAMM,iBACNC,QAAQC,IAAIzB,GAEZI,EAAKI,MAAMG,MAAQ,GACnBP,EAAKK,QAAQE,MAAQ,GACrBT,aAAawB,OAAO","sources":["src/js/03-feedback.js"],"sourcesContent":["// Напиши скрипт, який буде зберігати значення полів \n// у локальне сховище, коли користувач щось друкує.\n\n// 1+. Відстежуй на формі подію input, \n// і щоразу записуй у локальне сховище об'єкт з полями email і message, \n// у яких зберігай поточні значення полів форми.\n// Нехай ключем для сховища буде рядок \"feedback-form-state\".\n\n// 2+. Під час завантаження сторінки перевіряй стан сховища, \n// і якщо там є збережені дані, заповнюй ними поля форми.\n// В іншому випадку поля повинні бути порожніми.\n\n// 3+. Під час сабміту форми очищуй сховище і поля форми,\n// а також виводь у консоль об'єкт з полями email, \n// message та їхніми поточними значеннями.\n\n// 4+. Зроби так, щоб сховище оновлювалось не частіше, \n// ніж раз на 500 мілісекунд.\n// Для цього додай до проекту і використовуй бібліотеку lodash.throttle.\n\nimport _ from 'lodash';\n\nconst lodash = _; \nconst valuesForm = {};\nlet formObj = localStorage.getItem('feedback-form-state');\n\nconst refs = {\n    form: document.querySelector('.feedback-form'),\n    email: document.querySelector('input'),\n    message: document.querySelector('textarea'),\n}\n\nif (formObj) {\n    const dataFromStorage = JSON.parse(formObj)\n\n    writeValuesForm(dataFromStorage);\n}\n\nfunction writeValuesForm(dataFromStorage){\n    const {\n        email,\n        message,\n    } = dataFromStorage;\n\n    refs.email.value = email;\n    refs.message.value = message;\n\n    valuesForm.email = email;\n    valuesForm.message = message;\n}\n\nconst onInputWrite = (event) => {\n    const atrName = event.target.getAttribute('name');\n\n    if (atrName === \"email\") {\n        valuesForm.email = event.target.value;\n    }\n    \n    if (atrName === \"message\") {\n        valuesForm.message = event.target.value;\n    }\n\n    formObj = JSON.stringify(valuesForm);\n    localStorage.setItem(\"feedback-form-state\", formObj);\n}\n\nconst onButtonClick = (event) => {\n    event.preventDefault(); \n    console.log(valuesForm)\n\n    refs.email.value = '';\n    refs.message.value = '';\n    localStorage.clear();    \n}\n\nrefs.form.addEventListener('input', lodash.throttle(onInputWrite, 500));\n\nrefs.form.addEventListener('submit', onButtonClick)\n\n"],"names":["$945622fd0f572e60$var$lodash","$parcel$interopDefault","parcelRequire","$945622fd0f572e60$var$valuesForm","$945622fd0f572e60$var$formObj","localStorage","getItem","$945622fd0f572e60$var$refs","form","document","querySelector","email","message","dataFromStorage","value","$945622fd0f572e60$var$writeValuesForm","JSON","parse","addEventListener","throttle","event","atrName","target","getAttribute","stringify","setItem","preventDefault","console","log","clear"],"version":3,"file":"03-feedback.39c2b624.js.map"}